/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventorysystem;

import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Noor Aldeen Muneer
 */
public class ShowAllProduct extends javax.swing.JFrame {

    /**
     * Creates new form ShowAllProduct
     */
    String Method,Server;
    public ShowAllProduct(String method,String server) {
        initComponents();
        this.Method=method;
        this.Server=server;
        if(server.equals("PHP Server")){
            if(this.Method.equals("GET"))
                sendData_GET("http://localhost/inventorysystem/PHP_Server.php");
            else 
                sendData_POST("http://localhost/inventorysystem/PHP_Server.php");
        }
        else{
            if(this.Method.equals("GET"))
                sendData_GET("");
            else 
                sendData_POST("");
        }
    }

        void sendData_GET(String url) {
        String SS="";
        DataInputStream dis;
        try {
            String str = url+"?show="+"all";
            URL u = new URL(str);
            dis = new DataInputStream(u.openConnection().getInputStream());
            URLConnection myConn = u.openConnection();
            InputStream is = myConn.getInputStream();
            int b;
            while ((b = is.read()) != -1) {
                    SS = SS + (char) b;
            }
                 System.out.println(SS);
                    String [] res = SS.split("@");
                    DefaultTableModel model = (DefaultTableModel) AllProd.getModel();
                    for (int i=0;i<res.length;i++)
                    {
                        String [] items =res[i].split(":");
                        model.addRow(items);
                    }
                    
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
        
    String dataStr = "";
    String contentStr = "application/x-www-form-urlencoded";

    public void addParameter(String ps, String vs) {
        if (ps == null || vs == null || ps.length() == 0 || vs.length() == 0) {
            return;
        }
        if (dataStr.length() > 0) {
            dataStr += "&";
        }
        try {
            dataStr += ps + "=" + URLEncoder.encode(vs, "ASCII");
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }
    
        void sendData_POST(String url) {
        dataStr = "";
        OutputStream os;
        InputStream is;
        addParameter("show","all");
        String urlStr = url;
        String SS = "";
        try {
            URL myURL = new URL(urlStr);
            URLConnection myConn = myURL.openConnection();
            myConn.setDoOutput(true);
            myConn.setDoInput(true);
            myConn.setRequestProperty("Content-Type", contentStr);
            myConn.setUseCaches(false);
            BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
            out.write(dataStr.getBytes());
            out.close();
            int b = -1;
            is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                SS = SS + (char) b;
            }
           System.out.println(SS);
                    String [] res = SS.split("@");
                    DefaultTableModel model = (DefaultTableModel) AllProd.getModel();
                    for (int i=0;i<res.length;i++)
                    {
                        String [] items =res[i].split(":");
                        model.addRow(items);
                    }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AllProd = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(400, 150));

        AllProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product id", "Name", "Amount", "Price / item ($)", "Price / item (EURE)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AllProd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(31, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AllProd;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
